services:
  livox-camera:
    build:
      context: ../
      dockerfile: .devcontainer/Dockerfile
    user: "vscode"
    working_dir: /home/vscode
    network_mode: host

    expose:
      - 443
      - 80
      - 4567

    init: true
    privileged: true

    environment:
      - DISPLAY=$DISPLAY
      - QT_X11_NO_MITSHM=1
      - UDEV=1
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
      - DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket
      - LIBGL_ALWAYS_INDIRECT=1
    volumes:
      - ..:/workspace

      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker.sock

      # Enable GUI environments
      - /tmp/.X11-unix:/tmp/.X11-unix:rw

      # Enable kernel modules (v4l2loopback)
      - /lib/modules:/lib/modules

      # Enable creating/reading inside docker new devices
      - /dev:/dev

      - /run/user/1000/gdm/Xauthority:/run/user/1000/gdm/Xauthority

    # Add devices to be share in container
    devices:
      - /dev/bus/usb:/dev/bus/usb

      # NVIDIA drivers to use OpenGL, etc...
      - /dev/nvidia0:/dev/nvidia0
      - /dev/nvidiactl:/dev/nvidiactl
      - /dev/nvidia-uvm:/dev/nvidia-uvm
      - /dev/input:/dev/input
      - /dev/snd:/dev/snd
    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    # command: sleep infinity 
    stdin_open: true
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    command: "/bin/bash"
